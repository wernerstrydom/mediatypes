package {{ .PackageName }}


// MediaType represents a media type.
type MediaType struct {
  // Name is the media type such as "text/plain" or "application/json".
  name       string

  // Extensions is a list of file extensions that are associated with this media type.
  extensions []string

  // Format is the format of the media type such as "application/json" or
  // "application/xml", or empty if unknown.
  format     string

  // Registered returns true if the media type is registered with IANA.
  registered bool
}

// String returns the media type as a string.
func (m *MediaType) String() string {
  return m.name
}

// Name returns the media type name.
func (m *MediaType) Name() string {
  return m.name
}

// Format returns the media type format.
func (m *MediaType) Format() string {
  return m.format
}

// Extensions returns a list of file extensions that are associated with this media type.
func (m *MediaType) Extensions() []string {
  return m.extensions
}

// Registered returns true if the media type is registered with IANA.
func (m *MediaType) Registered() bool {
  return m.registered
}

// ByExtension returns the media type with the given file extension.
func ByExtension(ext string) []MediaType {
  var result []MediaType
  for _, m := range mediaTypes {
    for _, e := range m.extensions {
      if e == ext {
        result = append(result, m)
      }
    }
  }
  return result
}

// mediaTypes returns a list of all media types.
var mediaTypes = []MediaType{
{{- range .MediaTypes }}
  {
    name: "{{.Type}}",
    {{- if .Format }}
    format: "{{.Format}}",{{ end }}
    registered: {{.Registered}},
    {{- if .Extensions }}
    extensions: []string{
      {{range .Extensions}}"{{.}}",{{end}}
    },
    {{- end }}
  },
{{- end }}
}
